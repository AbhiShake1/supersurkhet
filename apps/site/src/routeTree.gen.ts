/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as CartImport } from './routes/cart'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as CheckoutSuccessImport } from './routes/checkout/success'
import { Route as CheckoutFailureImport } from './routes/checkout/failure'
import { Route as BusinessChatImport } from './routes/_business/chat'
import { Route as AuthAuthImport } from './routes/_auth/auth'
import { Route as BusinessRideIndexImport } from './routes/_business/ride/index'
import { Route as BusinessSchoolSasaImport } from './routes/_business/_school/sasa'
import { Route as BusinessRetailAnjalstoreImport } from './routes/_business/_retail/anjalstore'
import { Route as BusinessRestaurantTestRbdImport } from './routes/_business/_restaurant-test/rbd'
import { Route as BusinessRideAdminRouteImport } from './routes/_business/ride/admin/route'
import { Route as BusinessRideAdminIndexImport } from './routes/_business/ride/admin/index'
import { Route as BusinessDemosRestaurantIndexImport } from './routes/_business/_demos/restaurant/index'
import { Route as BusinessRideAdminVehicleTypesImport } from './routes/_business/ride/admin/vehicle-types'
import { Route as BusinessDemosRestaurantAdminImport } from './routes/_business/_demos/restaurant/admin'

// Create/Update Routes

const CheckoutRoute = CheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutSuccessRoute = CheckoutSuccessImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => CheckoutRoute,
} as any)

const CheckoutFailureRoute = CheckoutFailureImport.update({
  id: '/failure',
  path: '/failure',
  getParentRoute: () => CheckoutRoute,
} as any)

const BusinessChatRoute = BusinessChatImport.update({
  id: '/_business/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const BusinessRideIndexRoute = BusinessRideIndexImport.update({
  id: '/_business/ride/',
  path: '/ride/',
  getParentRoute: () => rootRoute,
} as any)

const BusinessSchoolSasaRoute = BusinessSchoolSasaImport.update({
  id: '/_business/_school/sasa',
  path: '/sasa',
  getParentRoute: () => rootRoute,
} as any)

const BusinessRetailAnjalstoreRoute = BusinessRetailAnjalstoreImport.update({
  id: '/_business/_retail/anjalstore',
  path: '/anjalstore',
  getParentRoute: () => rootRoute,
} as any)

const BusinessRestaurantTestRbdRoute = BusinessRestaurantTestRbdImport.update({
  id: '/_business/_restaurant-test/rbd',
  path: '/rbd',
  getParentRoute: () => rootRoute,
} as any)

const BusinessRideAdminRouteRoute = BusinessRideAdminRouteImport.update({
  id: '/_business/ride/admin',
  path: '/ride/admin',
  getParentRoute: () => rootRoute,
} as any)

const BusinessRideAdminIndexRoute = BusinessRideAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BusinessRideAdminRouteRoute,
} as any)

const BusinessDemosRestaurantIndexRoute =
  BusinessDemosRestaurantIndexImport.update({
    id: '/_business/_demos/restaurant/',
    path: '/restaurant/',
    getParentRoute: () => rootRoute,
  } as any)

const BusinessRideAdminVehicleTypesRoute =
  BusinessRideAdminVehicleTypesImport.update({
    id: '/vehicle-types',
    path: '/vehicle-types',
    getParentRoute: () => BusinessRideAdminRouteRoute,
  } as any)

const BusinessDemosRestaurantAdminRoute =
  BusinessDemosRestaurantAdminImport.update({
    id: '/_business/_demos/restaurant/admin',
    path: '/restaurant/admin',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth': {
      id: '/_auth/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof rootRoute
    }
    '/_business/chat': {
      id: '/_business/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof BusinessChatImport
      parentRoute: typeof rootRoute
    }
    '/checkout/failure': {
      id: '/checkout/failure'
      path: '/failure'
      fullPath: '/checkout/failure'
      preLoaderRoute: typeof CheckoutFailureImport
      parentRoute: typeof CheckoutImport
    }
    '/checkout/success': {
      id: '/checkout/success'
      path: '/success'
      fullPath: '/checkout/success'
      preLoaderRoute: typeof CheckoutSuccessImport
      parentRoute: typeof CheckoutImport
    }
    '/_business/ride/admin': {
      id: '/_business/ride/admin'
      path: '/ride/admin'
      fullPath: '/ride/admin'
      preLoaderRoute: typeof BusinessRideAdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_business/_restaurant-test/rbd': {
      id: '/_business/_restaurant-test/rbd'
      path: '/rbd'
      fullPath: '/rbd'
      preLoaderRoute: typeof BusinessRestaurantTestRbdImport
      parentRoute: typeof rootRoute
    }
    '/_business/_retail/anjalstore': {
      id: '/_business/_retail/anjalstore'
      path: '/anjalstore'
      fullPath: '/anjalstore'
      preLoaderRoute: typeof BusinessRetailAnjalstoreImport
      parentRoute: typeof rootRoute
    }
    '/_business/_school/sasa': {
      id: '/_business/_school/sasa'
      path: '/sasa'
      fullPath: '/sasa'
      preLoaderRoute: typeof BusinessSchoolSasaImport
      parentRoute: typeof rootRoute
    }
    '/_business/ride/': {
      id: '/_business/ride/'
      path: '/ride'
      fullPath: '/ride'
      preLoaderRoute: typeof BusinessRideIndexImport
      parentRoute: typeof rootRoute
    }
    '/_business/_demos/restaurant/admin': {
      id: '/_business/_demos/restaurant/admin'
      path: '/restaurant/admin'
      fullPath: '/restaurant/admin'
      preLoaderRoute: typeof BusinessDemosRestaurantAdminImport
      parentRoute: typeof rootRoute
    }
    '/_business/ride/admin/vehicle-types': {
      id: '/_business/ride/admin/vehicle-types'
      path: '/vehicle-types'
      fullPath: '/ride/admin/vehicle-types'
      preLoaderRoute: typeof BusinessRideAdminVehicleTypesImport
      parentRoute: typeof BusinessRideAdminRouteImport
    }
    '/_business/_demos/restaurant/': {
      id: '/_business/_demos/restaurant/'
      path: '/restaurant'
      fullPath: '/restaurant'
      preLoaderRoute: typeof BusinessDemosRestaurantIndexImport
      parentRoute: typeof rootRoute
    }
    '/_business/ride/admin/': {
      id: '/_business/ride/admin/'
      path: '/'
      fullPath: '/ride/admin/'
      preLoaderRoute: typeof BusinessRideAdminIndexImport
      parentRoute: typeof BusinessRideAdminRouteImport
    }
  }
}

// Create and export the route tree

interface CheckoutRouteChildren {
  CheckoutFailureRoute: typeof CheckoutFailureRoute
  CheckoutSuccessRoute: typeof CheckoutSuccessRoute
}

const CheckoutRouteChildren: CheckoutRouteChildren = {
  CheckoutFailureRoute: CheckoutFailureRoute,
  CheckoutSuccessRoute: CheckoutSuccessRoute,
}

const CheckoutRouteWithChildren = CheckoutRoute._addFileChildren(
  CheckoutRouteChildren,
)

interface BusinessRideAdminRouteRouteChildren {
  BusinessRideAdminVehicleTypesRoute: typeof BusinessRideAdminVehicleTypesRoute
  BusinessRideAdminIndexRoute: typeof BusinessRideAdminIndexRoute
}

const BusinessRideAdminRouteRouteChildren: BusinessRideAdminRouteRouteChildren =
  {
    BusinessRideAdminVehicleTypesRoute: BusinessRideAdminVehicleTypesRoute,
    BusinessRideAdminIndexRoute: BusinessRideAdminIndexRoute,
  }

const BusinessRideAdminRouteRouteWithChildren =
  BusinessRideAdminRouteRoute._addFileChildren(
    BusinessRideAdminRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRouteWithChildren
  '/auth': typeof AuthAuthRoute
  '/chat': typeof BusinessChatRoute
  '/checkout/failure': typeof CheckoutFailureRoute
  '/checkout/success': typeof CheckoutSuccessRoute
  '/ride/admin': typeof BusinessRideAdminRouteRouteWithChildren
  '/rbd': typeof BusinessRestaurantTestRbdRoute
  '/anjalstore': typeof BusinessRetailAnjalstoreRoute
  '/sasa': typeof BusinessSchoolSasaRoute
  '/ride': typeof BusinessRideIndexRoute
  '/restaurant/admin': typeof BusinessDemosRestaurantAdminRoute
  '/ride/admin/vehicle-types': typeof BusinessRideAdminVehicleTypesRoute
  '/restaurant': typeof BusinessDemosRestaurantIndexRoute
  '/ride/admin/': typeof BusinessRideAdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRouteWithChildren
  '/auth': typeof AuthAuthRoute
  '/chat': typeof BusinessChatRoute
  '/checkout/failure': typeof CheckoutFailureRoute
  '/checkout/success': typeof CheckoutSuccessRoute
  '/rbd': typeof BusinessRestaurantTestRbdRoute
  '/anjalstore': typeof BusinessRetailAnjalstoreRoute
  '/sasa': typeof BusinessSchoolSasaRoute
  '/ride': typeof BusinessRideIndexRoute
  '/restaurant/admin': typeof BusinessDemosRestaurantAdminRoute
  '/ride/admin/vehicle-types': typeof BusinessRideAdminVehicleTypesRoute
  '/restaurant': typeof BusinessDemosRestaurantIndexRoute
  '/ride/admin': typeof BusinessRideAdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRouteWithChildren
  '/_auth/auth': typeof AuthAuthRoute
  '/_business/chat': typeof BusinessChatRoute
  '/checkout/failure': typeof CheckoutFailureRoute
  '/checkout/success': typeof CheckoutSuccessRoute
  '/_business/ride/admin': typeof BusinessRideAdminRouteRouteWithChildren
  '/_business/_restaurant-test/rbd': typeof BusinessRestaurantTestRbdRoute
  '/_business/_retail/anjalstore': typeof BusinessRetailAnjalstoreRoute
  '/_business/_school/sasa': typeof BusinessSchoolSasaRoute
  '/_business/ride/': typeof BusinessRideIndexRoute
  '/_business/_demos/restaurant/admin': typeof BusinessDemosRestaurantAdminRoute
  '/_business/ride/admin/vehicle-types': typeof BusinessRideAdminVehicleTypesRoute
  '/_business/_demos/restaurant/': typeof BusinessDemosRestaurantIndexRoute
  '/_business/ride/admin/': typeof BusinessRideAdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/cart'
    | '/checkout'
    | '/auth'
    | '/chat'
    | '/checkout/failure'
    | '/checkout/success'
    | '/ride/admin'
    | '/rbd'
    | '/anjalstore'
    | '/sasa'
    | '/ride'
    | '/restaurant/admin'
    | '/ride/admin/vehicle-types'
    | '/restaurant'
    | '/ride/admin/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/cart'
    | '/checkout'
    | '/auth'
    | '/chat'
    | '/checkout/failure'
    | '/checkout/success'
    | '/rbd'
    | '/anjalstore'
    | '/sasa'
    | '/ride'
    | '/restaurant/admin'
    | '/ride/admin/vehicle-types'
    | '/restaurant'
    | '/ride/admin'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/cart'
    | '/checkout'
    | '/_auth/auth'
    | '/_business/chat'
    | '/checkout/failure'
    | '/checkout/success'
    | '/_business/ride/admin'
    | '/_business/_restaurant-test/rbd'
    | '/_business/_retail/anjalstore'
    | '/_business/_school/sasa'
    | '/_business/ride/'
    | '/_business/_demos/restaurant/admin'
    | '/_business/ride/admin/vehicle-types'
    | '/_business/_demos/restaurant/'
    | '/_business/ride/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  CartRoute: typeof CartRoute
  CheckoutRoute: typeof CheckoutRouteWithChildren
  AuthAuthRoute: typeof AuthAuthRoute
  BusinessChatRoute: typeof BusinessChatRoute
  BusinessRideAdminRouteRoute: typeof BusinessRideAdminRouteRouteWithChildren
  BusinessRestaurantTestRbdRoute: typeof BusinessRestaurantTestRbdRoute
  BusinessRetailAnjalstoreRoute: typeof BusinessRetailAnjalstoreRoute
  BusinessSchoolSasaRoute: typeof BusinessSchoolSasaRoute
  BusinessRideIndexRoute: typeof BusinessRideIndexRoute
  BusinessDemosRestaurantAdminRoute: typeof BusinessDemosRestaurantAdminRoute
  BusinessDemosRestaurantIndexRoute: typeof BusinessDemosRestaurantIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  CartRoute: CartRoute,
  CheckoutRoute: CheckoutRouteWithChildren,
  AuthAuthRoute: AuthAuthRoute,
  BusinessChatRoute: BusinessChatRoute,
  BusinessRideAdminRouteRoute: BusinessRideAdminRouteRouteWithChildren,
  BusinessRestaurantTestRbdRoute: BusinessRestaurantTestRbdRoute,
  BusinessRetailAnjalstoreRoute: BusinessRetailAnjalstoreRoute,
  BusinessSchoolSasaRoute: BusinessSchoolSasaRoute,
  BusinessRideIndexRoute: BusinessRideIndexRoute,
  BusinessDemosRestaurantAdminRoute: BusinessDemosRestaurantAdminRoute,
  BusinessDemosRestaurantIndexRoute: BusinessDemosRestaurantIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/cart",
        "/checkout",
        "/_auth/auth",
        "/_business/chat",
        "/_business/ride/admin",
        "/_business/_restaurant-test/rbd",
        "/_business/_retail/anjalstore",
        "/_business/_school/sasa",
        "/_business/ride/",
        "/_business/_demos/restaurant/admin",
        "/_business/_demos/restaurant/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/checkout": {
      "filePath": "checkout.tsx",
      "children": [
        "/checkout/failure",
        "/checkout/success"
      ]
    },
    "/_auth/auth": {
      "filePath": "_auth/auth.tsx"
    },
    "/_business/chat": {
      "filePath": "_business/chat.tsx"
    },
    "/checkout/failure": {
      "filePath": "checkout/failure.tsx",
      "parent": "/checkout"
    },
    "/checkout/success": {
      "filePath": "checkout/success.tsx",
      "parent": "/checkout"
    },
    "/_business/ride/admin": {
      "filePath": "_business/ride/admin/route.tsx",
      "children": [
        "/_business/ride/admin/vehicle-types",
        "/_business/ride/admin/"
      ]
    },
    "/_business/_restaurant-test/rbd": {
      "filePath": "_business/_restaurant-test/rbd.tsx"
    },
    "/_business/_retail/anjalstore": {
      "filePath": "_business/_retail/anjalstore.tsx"
    },
    "/_business/_school/sasa": {
      "filePath": "_business/_school/sasa.tsx"
    },
    "/_business/ride/": {
      "filePath": "_business/ride/index.tsx"
    },
    "/_business/_demos/restaurant/admin": {
      "filePath": "_business/_demos/restaurant/admin.tsx"
    },
    "/_business/ride/admin/vehicle-types": {
      "filePath": "_business/ride/admin/vehicle-types.tsx",
      "parent": "/_business/ride/admin"
    },
    "/_business/_demos/restaurant/": {
      "filePath": "_business/_demos/restaurant/index.tsx"
    },
    "/_business/ride/admin/": {
      "filePath": "_business/ride/admin/index.tsx",
      "parent": "/_business/ride/admin"
    }
  }
}
ROUTE_MANIFEST_END */
